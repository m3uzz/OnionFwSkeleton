<?php
/**
 * This file is part of Onion
 *
 * Copyright (c) 2014-2016, Humberto Lourenço <betto@m3uzz.com>.
 * All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions
 * are met:
 *
 *   * Redistributions of source code must retain the above copyright
 *     notice, this list of conditions and the following disclaimer.
 *
 *   * Redistributions in binary form must reproduce the above copyright
 *     notice, this list of conditions and the following disclaimer in
 *     the documentation and/or other materials provided with the
 *     distribution.
 *
 *   * Neither the name of Humberto Lourenço nor the names of his
 *     contributors may be used to endorse or promote products derived
 *     from this software without specific prior written permission.
 *
 * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
 * "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
 * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS
 * FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE
 * COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT,
 * INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING,
 * BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
 * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER
 * CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
 * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN
 * ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
 * POSSIBILITY OF SUCH DAMAGE.
 *
 * @category   PHP
 * @package    Onion
 * @author     Humberto Lourenço <betto@m3uzz.com>
 * @copyright  2014-2016 Humberto Lourenço <betto@m3uzz.com>
 * @license    http://www.opensource.org/licenses/BSD-3-Clause  The BSD 3-Clause License
 * @link       http://github.com/m3uzz/onionfw
 */
 
//echo $this->navigation('navigation')->menu()
?>
<ul class="nav menu">			
<?php
if (isset($laMenu) && is_array($laMenu))
{
	$lnSubItemId = 0;
	
	foreach ($laMenu as $laItem)
	{
		$lsIcon = '<span class="glyphicon"></span> ';
		
		if (! empty($laItem['icon']))
		{
			$lsIcon = '<span class="' . $laItem['icon'] . '"></span> ';
		}
		
		$lnSubItemId ++;
		
		if (is_array($laItem['submenu']))
		{
			$lsChildren = '';
			
			foreach ($laItem['submenu'] as $laSubItem)
			{
				if (is_array($laSubItem))
				{
					$lsIconChildren = '<span class="glyphicon"></span> ';
					$lsRouteC = '';
					
					if (! empty($laSubItem['icon']))
					{
						$lsIconChildren = '<span class="' . $laSubItem['icon'] . '"></span> ';
					}
					
					$laRouteC = explode("\\", $laSubItem['link']);
					
					if (is_array($laRouteC) && isset($laRouteC[1]))
					{
						$lsRouteC = $this->url($laRouteC[0], array(
							'action' => $laRouteC[1]
						));
					}
					else
					{
						$lsRouteC = $this->url($laSubItem['link']);
					}
					
					if (isset($laSubItem['params']) && ! empty($laSubItem['params']))
					{
						$lsRouteC .= "?" . $laSubItem['params'];
					}
					
					$lsIsActiveChildren = '';
					
					if ($lsRouteC == $_SERVER['REQUEST_URI'])
					{
						$lsIsActiveChildren = 'active';
					}
						
					$lsChildren .= '
					<li class="' . $lsIsActiveChildren . '">
						<a href="' . $lsRouteC . '" title="' . $this->translate($laSubItem['description']) . '" accesskey="' . $laSubItem['accesskey'] . '">
							&nbsp;&nbsp;&nbsp;' . $lsIconChildren . $this->translate($laSubItem['label']) . '
						</a>
					</li>';
				}
				elseif ($laSubItem == '-')
				{
					$lsChildren .= '<li class="divider"></li>';
				}
			}
			
			$lsItem = '
			<li class="parent">
				<a data-toggle="collapse" href="#sub-item-' . $lnSubItemId . '" title="' . $this->translate($laItem['description']) . '" accesskey="' . $laItem['accesskey'] . '">
			 		' . $lsIcon . $this->translate($laItem['label']) . '
			 		<span data-toggle="collapse" href="#sub-item-' . $lnSubItemId . '" class="icon pull-right">
						<em class="glyphicon glyphicon-s glyphicon-plus"></em>
					</span>
				</a>
				<ul class="children collapse" id="sub-item-' . $lnSubItemId . '">
					' . $lsChildren . '
				</ul>
			</li>';
		}
		else
		{
			$laRoute = explode("\\", $laItem['link']);
			$lsRoute = '';
			
			if (is_array($laRoute) && isset($laRoute[1]))
			{
				$lsRoute = $this->url($laRoute[0], array(
					'action' => $laRoute[1]
				));
			}
			else
			{
				$lsRoute = $this->url($laItem['link']);
			}
			
			if (isset($laItem['params']) && ! empty($laItem['params']))
			{
				$lsRoute .= "?" . $laItem['params'];
			}
			
			$lsIsActive = '';
			
			if ($lsRoute == $_SERVER['REQUEST_URI'])
			{
				$lsIsActive = 'active';
			}
			
			$lsItem = '
			<li class="' . $lsIsActive . '">
				<a href="' . $lsRoute . '" title="' . $this->translate($laItem['description']) . '" accesskey="' . $laItem['accesskey'] . '">
					' . $lsIcon . $this->translate($laItem['label']) . '
				</a>
			</li>';
		}
		
		echo $lsItem;
	}
}
?>
</ul>